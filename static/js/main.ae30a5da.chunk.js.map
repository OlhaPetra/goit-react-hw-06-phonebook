{"version":3,"sources":["components/Filter/Filter.module.css","components/Button/Button.module.css","components/ContactForm/ContactForm.module.css","components/Button/Button.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Button","title","type","className","s","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","reset","e","preventDefault","form","label","input","value","pattern","onChange","target","required","ContactItem","contactItem","contactName","contactNumber","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","Filter","App","setContacts","filter","setFilter","useEffect","localStorageContacts","JSON","parse","localStorage","getItem","setItem","stringify","completedFilter","normalizedFilter","toLowerCase","contact","toString","includes","getFilter","shortid","generate","normilizedContactName","trim","find","cont","alert","length","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae30a5da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1TXGV\",\"input\":\"Filter_input__2o_kN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1X5OR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ylFuX\",\"label\":\"ContactForm_label__QvTdJ\",\"input\":\"ContactForm_input__3JFh6\"};","import React from 'react';\nimport s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ title }) {\n  return (\n    <button type=\"submit\" className={s.button}>\n      {title}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Button';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameHandler = e => {\n    setName(e.target.value);\n  };\n  const numberHandler = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={nameHandler}\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          onChange={numberHandler}\n          required\n        />\n      </label>\n      <Button title=\"Add contact\" />\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number }) => {\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactName}> {`${name}:`}</p>{' '}\n      <p className={s.contactNumber}> {number}</p>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <ContactItem name={name} number={number} />\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n            className={s.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name{' '}\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const localStorageContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (localStorageContacts) {\n      setContacts(localStorageContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const onSubmitHandler = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const normilizedContactName = contact.name.toLowerCase().trim();\n    const sameContactName = contacts.find(\n      cont => cont.name.toLowerCase().trim() === normilizedContactName,\n    );\n    if (sameContactName) {\n      alert(`${contact.name} is already in contact`);\n      return;\n    }\n    setContacts([contact, ...contacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const getFilter = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toString().toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const completedFilter = getFilter();\n\n  return (\n    <div>\n      <h1 className=\"Title\">Phonebook</h1>\n      <ContactForm onSubmit={onSubmitHandler} />\n      <h2 className=\"Title\">Contacts</h2>\n      <div className=\"Contacts\">\n        {completedFilter.length > 1 && (\n          <Filter value={filter} onChange={changeFilter} />\n        )}\n        <ContactList\n          contacts={completedFilter}\n          onDeleteContact={deleteContact}\n        />\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__3nQa2\",\"contactName\":\"ContactItem_contactName__2lzp1\",\"contactNumber\":\"ContactItem_contactNumber__3a74A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1lM57\",\"item\":\"ContactList_item__103xk\",\"text\":\"ContactList_text__3b1HF\",\"button\":\"ContactList_button__maZf2\",\"label\":\"ContactList_label__wv28P\",\"input\":\"ContactList_input__GkkP7\"};"],"sourceRoot":""}