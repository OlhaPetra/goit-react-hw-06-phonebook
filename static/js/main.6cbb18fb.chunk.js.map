{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Button/Button.module.css","redux/phonebook/phonebook-actions.js","components/Button/Button.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsActions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","Button","title","type","className","s","button","ContactForm","useState","setName","setNumber","contacts","useSelector","state","phonebook","dispatch","useDispatch","reset","onSubmit","e","preventDefault","normilizedContactName","toLowerCase","trim","find","cont","alert","form","label","input","value","pattern","onChange","target","required","ContactItem","contactItem","contactName","contactNumber","ContactList","filter","visibleContacts","normalizedFilter","toString","includes","getVisibleContacts","list","map","item","onClick","onDeleteContact","Filter","App","createReducer","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6cbb18fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__3nQa2\",\"contactName\":\"ContactItem_contactName__2lzp1\",\"contactNumber\":\"ContactItem_contactNumber__3a74A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1lM57\",\"item\":\"ContactList_item__103xk\",\"text\":\"ContactList_text__3b1HF\",\"button\":\"ContactList_button__maZf2\",\"label\":\"ContactList_label__wv28P\",\"input\":\"ContactList_input__GkkP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1TXGV\",\"input\":\"Filter_input__2o_kN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1X5OR\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('phonebook/Add', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('phonebook/Delete');\r\nconst changeFilter = createAction('phonebook/ChangeFilter');\r\n\r\nconst contactsActions = { addContact, deleteContact, changeFilter };\r\nexport default contactsActions;\r\n","import React from 'react';\r\nimport s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ title }) {\r\n  return (\r\n    <button type=\"submit\" className={s.button}>\r\n      {title}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport contactsActions from '../../redux/phonebook/phonebook-actions';\r\nimport Button from '../Button';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(state => state.phonebook.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const nameHandleChange = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const numberHandleChange = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const normilizedContactName = name.toLowerCase().trim();\r\n    const sameContactName = contacts.find(\r\n      cont => cont.name.toLowerCase().trim() === normilizedContactName,\r\n    );\r\n\r\n    if (sameContactName) {\r\n      alert(`${name} is already in contact`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsActions.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={nameHandleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={numberHandleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <Button title=\"Add contact\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number }) => {\r\n  return (\r\n    <div className={s.contactItem}>\r\n      <p className={s.contactName}> {`${name}:`}</p>{' '}\r\n      <p className={s.contactNumber}> {number}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport contactsActions from '../../redux/phonebook/phonebook-actions';\r\nimport ContactItem from '../ContactItem';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(state => state.phonebook.contacts);\r\n  const filter = useSelector(state => state.phonebook.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    if (!contacts) {\r\n      return;\r\n    }\r\n    return contacts.filter(({ name }) =>\r\n      name.toString().toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  const visibleContacts = getVisibleContacts();\r\n\r\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\r\n\r\n  return (\r\n    <>      \r\n      <ul className={s.list}>\r\n        {visibleContacts.map(({ id, name, number }) => (\r\n          <li key={id} className={s.item}>\r\n            <ContactItem name={name} number={number} />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n              className={s.button}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport contactsActions from '../../redux/phonebook/phonebook-actions';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const filterHandleChange = e =>\r\n    dispatch(contactsActions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name{' '}\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        //value={value}\r\n        onChange={filterHandleChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nexport default function App() {\r\n  return (\r\n    <main>\r\n      <h1 className=\"Title\">Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className=\"Title\">Contacts</h2>\r\n      <div className=\"Contacts\">\r\n      <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './phonebook-actions';\r\n\r\nconst { addContact, deleteContact, changeFilter } = contactsActions;\r\n\r\nconst contacts = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n//state не нужен, ставим вместо него _\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ylFuX\",\"label\":\"ContactForm_label__QvTdJ\",\"input\":\"ContactForm_input__3JFh6\"};"],"sourceRoot":""}