{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Button/Button.module.css","redux/phonebook/phonebook-actions.js","components/Button/Button.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsActions","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","Button","title","type","className","s","button","ContactForm","useState","setName","setNumber","contacts","useSelector","state","phonebook","dispatch","useDispatch","reset","onSubmit","e","preventDefault","normilizedContactName","toLowerCase","trim","find","cont","alert","form","label","input","value","pattern","onChange","target","required","Filter","ContactItem","contactItem","contactName","contactNumber","ContactList","filter","visibleContacts","normalizedFilter","toString","includes","getVisibleContacts","length","list","map","item","onClick","onDeleteContact","App","createReducer","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,cAAgB,qC,mBCAhID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,4BAA4B,MAAQ,2BAA2B,MAAQ,6B,mBCArMD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,OAAS,yB,wICgBZC,EADS,CAAEC,WAbPC,YAAa,iBAAiB,YAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACvD,MAAO,CACLC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cAQgCK,cAHhBP,YAAa,oBAGkBQ,aAFhCR,YAAa,2B,wBCVnB,SAASS,EAAT,GAA4B,IAAVC,EAAS,EAATA,MAC/B,OACE,wBAAQC,KAAK,SAASC,UAAWC,IAAEC,OAAnC,SACGJ,I,oBC4EQK,MA3Ef,WACE,MAAwBC,mBAAS,IAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOd,EAAP,KAAegB,EAAf,KAEMC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,YAChDI,EAAWC,cA0BXC,EAAQ,WACZR,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMQ,SAvBa,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAwB5B,EAAK6B,cAAcC,OACzBZ,EAASa,MAC/B,SAAAC,GAAI,OAAIA,EAAKhC,KAAK6B,cAAcC,SAAWF,KAI3CK,MAAM,GAAD,OAAIjC,EAAJ,4BAIPsB,EAASzB,EAAgBC,WAAW,CAAEE,OAAMC,YAC5CuB,MAS8Bb,UAAWC,IAAEsB,KAA3C,UACE,wBAAOvB,UAAWC,IAAEuB,MAApB,iBAEE,uBACExB,UAAWC,IAAEwB,MACb1B,KAAK,OACLV,KAAK,OACLqC,MAAOrC,EACPsC,QAAQ,yHACR7B,MAAM,kcACN8B,SAxCiB,SAAAb,GACvBV,EAAQU,EAAEc,OAAOH,QAwCXI,UAAQ,OAGZ,wBAAO9B,UAAWC,IAAEuB,MAApB,mBAEE,uBACExB,UAAWC,IAAEwB,MACb1B,KAAK,MACLV,KAAK,SACLqC,MAAOpC,EACPqC,QAAQ,yFACR7B,MAAM,giBACN8B,SAlDmB,SAAAb,GACzBT,EAAUS,EAAEc,OAAOH,QAkDbI,UAAQ,OAGZ,cAACjC,EAAD,CAAQC,MAAM,oB,iBCzCLiC,MAxBf,WACA,IAAMpB,EAAWC,cAIf,OACE,wBAAOZ,UAAWC,IAAEuB,MAApB,kCACwB,IACtB,uBACExB,UAAWC,IAAEwB,MACb1B,KAAK,OACLV,KAAK,SAELuC,SAVmB,SAAAb,GAAC,OAAIJ,EAASzB,EAAgBU,aAAamB,EAAEc,OAAOH,e,iBCMhEM,EAbK,SAAC,GAAsB,IAApB3C,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC3B,OACE,sBAAKU,UAAWC,IAAEgC,YAAlB,UACE,oBAAGjC,UAAWC,IAAEiC,YAAhB,wBAAkC7C,EAAlC,QAA+C,IAC/C,oBAAGW,UAAWC,IAAEkC,cAAhB,cAAiC7C,S,iBC+CxB8C,EA7CK,WAClB,IAAM7B,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,YAChD8B,EAAS7B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAU2B,UAC9C1B,EAAWC,cAYX0B,EAVqB,WACzB,IAAMC,EAAmBF,EAAOnB,cAChC,GAAKX,EAGL,OAAOA,EAAS8B,QAAO,qBAAGhD,KACnBmD,WAAWtB,cAAcuB,SAASF,MAInBG,GAIxB,OACE,qCACGJ,EAAgBK,OAAS,GAAK,cAAC,EAAD,IAC/B,oBAAI3C,UAAWC,IAAE2C,KAAjB,SACGN,EAAgBO,KAAI,gBAAGrD,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,qBAAaU,UAAWC,IAAE6C,KAA1B,UACE,cAAC,EAAD,CAAazD,KAAMA,EAAMC,OAAQA,IACjC,wBACES,KAAK,SACLgD,QAAS,kBAXG,SAAAvD,GAAE,OAAImB,EAASzB,EAAgBS,cAAcH,IAW1CwD,CAAgBxD,IAC/BQ,UAAWC,IAAEC,OAHf,sBAFOV,YC5BJ,SAASyD,IACtB,OACE,iCACE,oBAAIjD,UAAU,QAAd,uBACA,cAAC,EAAD,IACA,oBAAIA,UAAU,QAAd,sBACA,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,S,qECRAb,EAA4CD,EAA5CC,WAAYQ,EAAgCT,EAAhCS,cAAeC,EAAiBV,EAAjBU,aAE7BW,EAAW2C,YAAc,IAAD,mBAC3B/D,GAAa,SAACsB,EAAD,OAASlB,EAAT,EAASA,QAAT,4BAAwBkB,GAAxB,CAA+BlB,OADjB,cAE3BI,GAAgB,SAACc,EAAD,OAASlB,EAAT,EAASA,QAAT,OAAoBkB,EAAM4B,QAAO,qBAAG7C,KAAgBD,QAFzC,IAMxB8C,EAASa,YAAc,GAAD,eACzBtD,GAAe,SAACuD,EAAD,YAAK5D,YAGR6D,cAAgB,CAC7B7C,WACA8B,WCFIgB,EAAyB,CAC7BC,IAAK,YACLC,YACAC,UAAW,CAAC,WAGRC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAQC,YAAe,CAC3BC,QAAS,CAAE5D,UAAW6D,YAAelB,EAAwBmB,IAC7Df,aACAgB,UAAUC,IAGNC,EAAYC,YAAaR,G,oBC3B/BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaY,QAAS,KAAML,UAAWA,EAAvC,SACA,cAAC1B,EAAD,UAIJgC,SAASC,eAAe,U,kBCjB1BlG,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,8B","file":"static/js/main.9df5ea7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__3nQa2\",\"contactName\":\"ContactItem_contactName__2lzp1\",\"contactNumber\":\"ContactItem_contactNumber__3a74A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1lM57\",\"item\":\"ContactList_item__103xk\",\"text\":\"ContactList_text__3b1HF\",\"button\":\"ContactList_button__maZf2\",\"label\":\"ContactList_label__wv28P\",\"input\":\"ContactList_input__GkkP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1TXGV\",\"input\":\"Filter_input__2o_kN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1X5OR\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('phonebook/Add', ({name, number})=>{\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction('phonebook/Delete');\nconst changeFilter = createAction('phonebook/ChangeFilter');\n\nconst contactsActions = { addContact, deleteContact, changeFilter };\nexport default contactsActions;\n","import React from 'react';\nimport s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ title }) {\n  return (\n    <button type=\"submit\" className={s.button}>\n      {title}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  title: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport contactsActions from '../../redux/phonebook/phonebook-actions';\nimport Button from '../Button';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => state.phonebook.contacts);\n  const dispatch = useDispatch();\n\n  const nameHandleChange = e => {\n    setName(e.target.value);\n  };\n  const numberHandleChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const normilizedContactName = name.toLowerCase().trim();\n    const sameContactName = contacts.find(\n      cont => cont.name.toLowerCase().trim() === normilizedContactName,\n    );\n\n    if (sameContactName) {\n      alert(`${name} is already in contact`);\n      return;\n    }\n\n    dispatch(contactsActions.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={nameHandleChange}\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          onChange={numberHandleChange}\n          required\n        />\n      </label>\n      <Button title=\"Add contact\" />\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport contactsActions from '../../redux/phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\nconst dispatch = useDispatch();\n\nconst filterHandleChange = e => dispatch(contactsActions.changeFilter(e.target.value));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name{' '}\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        //value={value}\n        onChange={filterHandleChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number }) => {\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactName}> {`${name}:`}</p>{' '}\n      <p className={s.contactNumber}> {number}</p>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport default ContactItem;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport contactsActions from '../../redux/phonebook/phonebook-actions';\nimport Filter from '../Filter/Filter';\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.phonebook.contacts);\n  const filter = useSelector(state => state.phonebook.filter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (!contacts) {\n      return;\n    }\n    return contacts.filter(({ name }) =>\n      name.toString().toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <>\n      {visibleContacts.length > 1 && <Filter />}\n      <ul className={s.list}>\n        {visibleContacts.map(({ id, name, number }) => (\n          <li key={id} className={s.item}>\n            <ContactItem name={name} number={number} />\n            <button\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n              className={s.button}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\n\nexport default function App() {\n  return (\n    <main>\n      <h1 className=\"Title\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"Title\">Contacts</h2>\n      <div className=\"Contacts\">\n        <ContactList />\n      </div>\n    </main>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './phonebook-actions';\n\nconst { addContact, deleteContact, changeFilter } = contactsActions;\n\nconst contacts = createReducer([], {\n  [addContact]: (state, {payload})=>[...state, payload],\n  [deleteContact]: (state, {payload})=>state.filter(({ id }) => id !== payload),\n})\n\n//state не нужен, ставим вместо него _\nconst filter = createReducer('', {\n  [changeFilter]: (_, {payload})=>payload,\n})\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst phonebookPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: { phonebook: persistReducer(phonebookPersistConfig, phonebookReducer) },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {store, persistor} from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ylFuX\",\"label\":\"ContactForm_label__QvTdJ\",\"input\":\"ContactForm_input__3JFh6\"};"],"sourceRoot":""}